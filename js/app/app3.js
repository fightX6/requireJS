/**
	存在依赖的函数式定义
	§ 1.3.3
	如果模块存在依赖：则第一个参数是依赖的名称数组；第二个参数是函数，在模块的所有依赖加载完毕后，该函数会被调用来定义该模块，
	因此该模块应该返回一个定义了本模块的object。依赖关系会以参数的形式注入到该函数上，参数列表与依赖名称列表一一对应。

	模块函数以参数"app0"及"app1"使用这两个以"app/app0"及"app/app1"名称指定的模块。在这两个模块加载完毕之前，模块函数不会被调用。
	严重不鼓励模块定义全局变量。遵循此处的定义模式，可以使得同一模块的不同版本并存于同一个页面上(参见 高级用法 )。另外，函参的顺序应与依赖顺序保存一致。
	返回的object定义了"app/app2"模块。这种定义模式下，"app/app2"不作为一个全局变量而存在。
*/
define(['app/app1','app/app2'],function(app1,app2){ 
	return {
		app1:app1,
		app2:app2
	} 
});